# -*- coding: utf-8 -*-
"""Data 602 Final Project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X1upCjFD1xhNIg0hFOJRzLZDohDB_XLO

# Data 602: Final Project- Jiaxin Zheng

## About this Data:

I found this data on Kaggle: https://www.kaggle.com/datasets/nelgiriyewithana/new-york-housing-market/data

This data is about the prices of New York houses, it includes information and valuable such as house type, prices, number of bedrooms, bathrooms, and property square footage, addresses, state, and geographical coordinates.

## why is this relevant to my industry?
This is relevant to me because I work as an interior designer in an architectural firm now. I understand how everyone wants to design their own dream house. On other hand, I also understand the real estate market is important, and understanding housing price trends, and location is essential for buyers. In this project allows the to make informed decisions and investments to solve real-world problems.

## Research Question:
1. How do housing prices vary across different neighborhoods or locations?
2. What factors influence housing prices the most?

##I. Prepare and view the data

1. Load the libray
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import math

"""2. Read and prepare the data"""

df = pd.read_csv('https://raw.githubusercontent.com/Jennyjjxxzz/Data602_Final_Project/refs/heads/main/NY-House-Dataset.csv?token=GHSAT0AAAAAACZSAUTMUKIJDBHHZRJDTNGYZ24Q4JQ')

df.head()

# View the shape of the data
df.shape

# See the describe
df.describe()

display(df.info())

"""## II. Tidy the data

1. Check for missing value
"""

df.isnull().sum()

"""2. Remove the unnecesory columns"""

df = df.drop(['LONGITUDE', 'LATITUDE', 'FORMATTED_ADDRESS', 'LONG_NAME', 'SUBLOCALITY', 'LOCALITY', 'ADMINISTRATIVE_AREA_LEVEL_2', 'MAIN_ADDRESS', 'STATE', 'ADDRESS', 'BROKERTITLE'], axis=1)
df.head()

"""3. Rename the coulumns"""

df.rename(columns={'TYPE': 'Type', 'PRICE': 'Price', 'BEDS': 'Beds', 'BATH':'Bath', 'PROPERTYSQFT': 'SQFT','STREET_NAME': 'Location'}, inplace=True)

display(df)

"""4. Round up the weird number in bath, SQFT and remove some outline number


"""

#Round up the weird number
df['SQFT'] = df['SQFT'].apply(math.ceil)

df['Bath'] = df['Bath'].apply(math.ceil)

#Remove the outline number
df = df.drop(df[df['Price'] == 2147483647].index)
df = df.drop(df[df['Price'] == 195000000].index)

df.head()

"""5. Filter for houses only"""

# Filter for rows where Type is 'House for sale'
house_df = df[df['Type'] == 'House for sale']

"""6. Merge colunms "Manhattan" and New York"

"""

house_df.loc[:, 'Location'] = house_df['Location'].replace({
    'Manhattan': 'New York',
    'New York County': 'New York',
    'manhattan': 'New York',
    'new york': 'New York'
})
house_df.head()

"""## III. EDA

1. House number for sale by Location (Top 20 house locations)
- The Queens area has the highest number of houses for sale, followed by Brooklyn, and Staten Island in third place.
"""

# Count the number of houses for sale in each location
counter = house_df['Location'].value_counts()

# Create a bar plot for the top 20 locations
plt.figure(figsize=(12, 6))
plt.bar(counter.index[:20], counter[:20], color='red')
plt.xticks(rotation=90)  # Rotate x-axis labels

plt.xlabel('Locations')
plt.ylabel('Number of Houses')
plt.title('Number of Houses for Sale by Location')

plt.tight_layout()
plt.show()

"""2. View the pice by location"""

# Group data by Location
location_summary = house_df.groupby('Location').agg(
    house_count=('Price', 'size'),
    avg_price=('Price', 'mean')
).reset_index()

location_summary.head()

"""- Queens has more houses for sale compared to other areas, and the prices are affordable. In contrast, New York City (including Manhattan) has the highest house prices, with a limited number of available properties."""

# Top 20 locations
top_20_locations = location_summary.nlargest(20, 'house_count')

# Scatter plot
plt.figure(figsize=(10, 6))
sns.scatterplot(
    x='house_count',
    y='avg_price',
    hue='Location',
    size='avg_price',
    sizes=(50, 300),
    data=top_20_locations
)
plt.title('Scatter Plot of House Count vs Average Price by Location')
plt.xlabel('Number of Houses')
plt.ylabel('Average Price (in USD)')
plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')
plt.grid(True)

# Format y-axis as currency
import matplotlib.ticker as ticker
formatter = ticker.FuncFormatter(lambda x, _: f'${x:,.0f}')
plt.gca().yaxis.set_major_formatter(formatter)
plt.show()

"""3. EDA for beds, bath,and SQFT

- Square footage is the most important reason influencing house prices
"""

# Compute correlation of numerical features with PRICE
correlations = house_df[['Price', 'Beds', 'Bath', 'SQFT']].corr()['Price'].sort_values(ascending=False)

plt.figure(figsize=(8, 5))
correlations.drop('Price').plot(kind='bar', color='skyblue')
plt.title('Correlation of Features with Housing Prices')
plt.ylabel('Correlation Coefficient')
plt.xlabel('Features')
plt.show()

"""- When the square feet range are larger, the house price is higher."""

# Bin SquareFeet into ranges using .loc
house_df.loc[:, 'SquareFeet_Binned'] = pd.cut(
    house_df['SQFT'],
    bins=[0, 1000, 2000, 3000, 5000, np.inf],
    labels=['0-1000', '1000-2000', '2000-3000', '3000-5000', '5000+']
)

# Aggregate average price for binned SquareFeet with observed parameter
sqft_summary = house_df.groupby('SquareFeet_Binned', observed=False)['Price'].mean()

plt.figure(figsize=(10, 6))
sqft_summary.plot(kind='bar', color='lightgreen')
plt.title('Average Housing Price by Square Footage Range')
plt.xlabel('Square Footage Range')
plt.ylabel('Average Price (in USD)')

# Format y-axis as currency
import matplotlib.ticker as ticker
formatter = ticker.FuncFormatter(lambda x, _: f'${x:,.0f}')
plt.gca().yaxis.set_major_formatter(formatter)
plt.show()

"""- The number of bedrooms and bathrooms significantly impacts house prices. Houses with 11 bedrooms and 10 bathrooms tend to have substantially higher prices."""

# List of key features to analyze
key_features = ['Beds', 'Bath']

# Bar plot for each feature vs Price
for feature in key_features:
    feature_summary = house_df.groupby(feature)['Price'].mean().sort_index()
    plt.figure(figsize=(10, 6))
    feature_summary.plot(kind='bar', color='skyblue')
    plt.title(f'Average Housing Price by {feature}')
    plt.xlabel(feature)
    plt.ylabel('Average Price (in USD)')

# Format y-axis as currency
    import matplotlib.ticker as ticker
    formatter = ticker.FuncFormatter(lambda x, _: f'${x:,.0f}')
    plt.gca().yaxis.set_major_formatter(formatter)
    plt.tight_layout()
    plt.show()

"""## Summary:
The dataset provides insights into New York housing trends, highlighting that the Queens area has the most houses for sale, followed by Brooklyn, and Staten Island. Queens offers affordable prices, and New York (including Manhattan) has the highest prices but limited availability. Square footage is the ket factors influencing house prices. Those withh 11 bedrooms and 10 bathrooms significantly higher prices in houses.
"""